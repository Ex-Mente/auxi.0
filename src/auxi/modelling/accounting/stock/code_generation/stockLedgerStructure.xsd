<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="stockLedgerStructure"
    targetNamespace="auxi::modelling::accounting::stock"
    elementFormDefault="qualified"
    xmlns="stock"
    xmlns:mstns="auxi::modelling::accounting::stock"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
>
<xs:element name="auxi.modelling.accounting.stock.StockLedgerStructure" type="StockLedgerStructure"/>


<xs:complexType name="StockLedgerStructure" additional_includes="StockLedgerAccount" constructor_init_function="initialize" to_string_function="to_string" destructor_clean_function="clean">
<function name="create_account" returnType="StockLedgerAccount*">
  <param name="name" type="std::string"/>
  <param name="account_number" type="std::string"/>
  <param name="account_type" type="StockLedgerAccountType::StockLedgerAccountType"/>
</function>
<function name="remove_account" returnType="void">
  <param name="account_number" type="std::string"/>
</function>
<function name="get_account" returnType="StockLedgerAccount*">
  <param name="name" type="std::string"/>
</function>
<function name="initialize" returnType="void" />
<function name="clean" returnType="void" />
<function name="to_string" returnType="std::string" />
<xs:sequence>
    <xs:element name="Account" type="StockLedgerAccount*" minOccurs="0" maxOccurs="unbounded"/>
</xs:sequence>
<xs:attribute name="MiscAccount" type="StockLedgerAccount*"/>
</xs:complexType>
</xs:schema>
