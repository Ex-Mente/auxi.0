<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="component"
    targetNamespace="auxi::modelling::business"
    elementFormDefault="qualified"
    xmlns="business"
    xmlns:mstns="auxi::modelling::business"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
>
<xs:element name="auxi.modelling.business.Component" type="Component"/>

<xs:complexType name="Component" base="ExecutionObject" additional_includes="VariableGroup,Activity,Clock,Transaction">
<function name="create_component" returnType="Component*">
  <param name="name" type="std::string"/>
</function>
<function name="remove_component" returnType="void">
  <param name="name" type="std::string"/>
</function>
<function name="SetName" returnType="void">
    <param name="value" type="std::string" />
</function>
<function name="set_path" returnType="void">
    <param name="parent_path" type="std::string" />
</function>
<function name="prepare_to_run" returnType="void">
    <param name="clock" type="Clock*" />
    <param name="totalIntervalsToRun" type="int" />
</function>
<function name="run" returnType="void">
    <param name="clock" type="Clock*" />
    <param name="ix_interval" type="int" />
    <param name="generalLedger" type="auxi::modelling::accounting::financial::GeneralLedger*" />
    <param name="stockLedger" type="auxi::modelling::accounting::stock::StockLedger*" />
</function>
<xs:sequence>
    <xs:element name="VariableGroup" type="VariableGroup*" minOccurs="0" maxOccurs="unbounded"/>
    <xs:element name="Component" type="Component*" minOccurs="0" maxOccurs="unbounded"/>
    <xs:element name="Activity" type="Activity*" minOccurs="0" maxOccurs="unbounded"/>
</xs:sequence>
<xs:attribute name="path" type="std::string" py_set="False"/>

</xs:complexType>

</xs:schema>
