<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="stoichiometry"
    targetNamespace="auxi::tools::chemistry"
    elementFormDefault="qualified"
    xmlns="chemistry"
    xmlns:mstns="auxi::tools::chemistry"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
>
<xs:element name="auxi.tools.chemistry.Thermochemistry" type="Thermochemistry"/>

<xs:complexType name="Thermochemistry" isNamespace="true" additional_includes="Compound,&lt;boost/property_tree/ptree.hpp&gt;">
<function name="read_compound_from_auxi_file" returnType="boost::property_tree::ptree" private="true" doc="" doc_return="">
    <param name="file_name" type="std::string" doc="" />
</function>
<function name="get_default_data_path" returnType="std::string" doc="Calculate the default path in which thermochemical data is stored." doc_return="Default path." />
<function name="set_default_data_path" returnType="void" doc="Sets the default path in which thermochemical data is stored.">
    <param name="new_default_path" type="std::string" doc="The new default path." />
</function>
<function name="read_compounds" returnType="std::map&lt;std::string, Compound&gt;" private="true" doc="" doc_return="">
    <param name="path" type="std::string" default="" doc="" />
</function>

<function name="convert_fact_file_to_auxi_thermo_file" returnType="void" doc="Convert a Factsage file to a new auxi thermochemical file.">
    <param name="fact_file_path" type="std::string" doc="The path of the Factsage file." />
    <param name="auxi_thermo_file_path" type="std::string" doc="The path the auxi thermochemical file." />
</function>
<function name="load_data" returnType="void" doc="Load all the thermochemical data files located at a path.">
    <param name="path" type="std::string" default="" doc="Path at which the data files are located." />
</function>
<function name="list_compounds" returnType="void" doc="List all compounds that are currently loaded in the thermo module, and
    their phases."/>
<function name="molar_mass" returnType="double" doc="Determine the molar mass of a chemical compound.">
    <param name="compound" type="std::string" doc="Formula of a chemical compound, e.g. &quot;Fe2O3&quot;." />
</function>
<function name="Cp" returnType="double" forceCaps="true" doc="Calculate the heat capacity of the compound for the specified
    temperature and mass." doc_return="Heat capacity. [kWh/K]">
    <param name="compound_String" type="std::string" doc="Formula and phase of chemical compound, e.g. &quot;Fe2O3[S1]&quot;." />
    <param name="temperature" type="double" doc="[째C]" />
    <param name="mass" type="double" default="1.0" doc="[kg]" />
</function>
<function name="H" returnType="double" forceCaps="true" doc="Calculate the enthalpy of the compound for the specified
    temperature and mass." doc_return="Enthalpy. [kWh/K]">
    <param name="compound_String" type="std::string" doc="Formula and phase of chemical compound, e.g. &quot;Fe2O3[S1]&quot;." />
    <param name="temperature" type="double" doc="[째C]" />
    <param name="mass" type="double" default="1.0" doc="[kg]" />
</function>
<function name="S" returnType="double" forceCaps="true" doc="Calculate the entropy of the compound for the specified
    temperature and mass." doc_return="Entropy. [kWh/K]">
    <param name="compound_String" type="std::string" doc="Formula and phase of chemical compound, e.g. &quot;Fe2O3[S1]&quot;." />
    <param name="temperature" type="double" doc="[째C]" />
    <param name="mass" type="double" default="1.0" doc="[kg]" />
</function>
<function name="G" returnType="double" forceCaps="true" doc="Calculate the Gibbs free energy of the compound for the specified
    temperature and mass." doc_return="Gibbs free energy. [kWh/K]">
    <param name="compound_String" type="std::string" doc="Formula and phase of chemical compound, e.g. &quot;Fe2O3[S1]&quot;." />
    <param name="temperature" type="double" doc="[째C]" />
    <param name="mass" type="double" default="1.0" doc="[kg]" />
</function>
<xs:sequence>
    <xs:element name="Compound" type="std::string, Compound" minOccurs="0" maxOccurs="unbounded" dict="true" doc="A dictionary of chemical compounds with thermochemical data loaded
from data files."/>
</xs:sequence>
<xs:attribute name="a" type="std::string" default="" private="true" get="false" set="false"/>

</xs:complexType>

</xs:schema>
